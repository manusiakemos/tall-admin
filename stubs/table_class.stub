<?php

namespace App\Http\Livewire\{@className};

use App\Models\Slider;
use Illuminate\Database\Eloquent\Builder;
use Rappasoft\LaravelLivewireTables\DataTableComponent;
use Rappasoft\LaravelLivewireTables\Views\Column;
use Rappasoft\LaravelLivewireTables\Views\Columns\BooleanColumn;
use Rappasoft\LaravelLivewireTables\Views\Filters\SelectFilter;

class {@className}Table extends DataTableComponent
{
    public function configure(): void
    {
            $this->setPrimaryKey("{@primaryKey}")
            ->setUseHeaderAsFooterEnabled()
            ->setPerPageAccepted([-1, 10, 25, 50])
            ->setThAttributes(function (Column $column) {
                if (in_array($column->getTitle(), ['Action'])) {
                    return [
                        'default' => true,
                        'class' => 'text-center',
                    ];
                }
                return ['default' => true];
            });
    }

    public array $bulkActions = [
        'destroySelected' => 'Hapus',
    ];

    public function destroySelected()
    {
        {@className}::whereIn($this->primaryKey, $this->getSelected())->delete();
        $this->emit("showToast", ["message" => "{@className}s Deleted Successfully", "type"=>"success"]);
    }

    public function columns(): array
    {
        return [
            {@columns}
            Column::make("Action", "{@primaryKey}")
                ->html()
                ->format(function ($value, {@className} $row) {
                    return view('livewire.{@classNameLower}._{@classNameLower}-action', compact('row'));
                }),
        ];
    }

    public function builder(): Builder
    {
       return {@className}::query();
    }
}
